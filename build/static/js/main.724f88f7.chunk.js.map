{"version":3,"sources":["Components/WABody/WeatherAppBody.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherAppBody","useState","userN","setuserN","userData","setuserData","console","log","axios","get","then","res","data","style","color","fontWeight","fontFamily","marginBottom","className","name","sys","country","main","temp","weather","description","feels_like","humidity","wind","speed","temp_min","temp_max","class","width","outline","position","display","flexWrap","alignItems","type","id","placeholder","borderRadius","height","border","background","marginLeft","onClick","event","userName","document","getElementById","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.724f88f7.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./weatherAppBody.css\"\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport default function WeatherAppBody() {\r\n    const [userN, setuserN] = useState([])\r\n    let [userData, setuserData] = useState({\r\n        \"coord\": {\r\n            \"lon\": 67.0822,\r\n            \"lat\": 24.9056\r\n        },\r\n        \"weather\": [\r\n            {\r\n                \"id\": 800,\r\n                \"main\": \"Clear\",\r\n                \"description\": \"clear sky\",\r\n                \"icon\": \"01d\"\r\n            }\r\n        ],\r\n        \"base\": \"stations\",\r\n        \"main\": {\r\n            \"temp\": 25.9,\r\n            \"feels_like\": 26.03,\r\n            \"temp_min\": 25.9,\r\n            \"temp_max\": 25.9,\r\n            \"pressure\": 1011,\r\n            \"humidity\": 57\r\n        },\r\n        \"visibility\": 6000,\r\n        \"wind\": {\r\n            \"speed\": 6.17,\r\n            \"deg\": 220\r\n        },\r\n        \"clouds\": {\r\n            \"all\": 0\r\n        },\r\n        \"dt\": 1643787340,\r\n        \"sys\": {\r\n            \"type\": 1,\r\n            \"id\": 7576,\r\n            \"country\": \"PK\",\r\n            \"sunrise\": 1643768030,\r\n            \"sunset\": 1643807806\r\n        },\r\n        \"timezone\": 18000,\r\n        \"id\": 1174872,\r\n        \"name\": \"Karachi\",\r\n        \"cod\": 200\r\n    })\r\n\r\n    if ('base' in userData) {\r\n        console.log(\"Has Data\")\r\n\r\n        axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + userN + \"&appid=95d9d3a5000b4fbba32450cff464b5d7&units=metric\").then((res) => {\r\n            console.log(res.data);\r\n            setuserData(res.data)\r\n            console.log(userData)\r\n        });\r\n\r\n\r\n    } else {\r\n\r\n        axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + \"karachi\" + \"&appid=95d9d3a5000b4fbba32450cff464b5d7&units=metric\").then((res) => {\r\n            console.log(res.data);\r\n            setuserData(res.data)\r\n            console.log(userData)\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const userEvent = (event) => {\r\n        let userName = document.getElementById('user').value\r\n        setuserN(userName)\r\n        console.log(userN)\r\n    }\r\n\r\n    // const [userData, setuserData] = useState([])\r\n\r\n    // const userEvent = (event) => {\r\n    //     setuserN(event.target.value)\r\n    //     console.log(userN)\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + userN + \"&appid=95d9d3a5000b4fbba32450cff464b5d7&units=metric\").then((res) => {\r\n    //         console.log(res.data);\r\n    //         setuserData(res.data)\r\n    //         console.log(userData)\r\n    //     });\r\n    // }, [userN]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{ color: 'white', fontWeight: 'bold', fontFamily: 'monospace', marginBottom: '25px' }}>React Weather App by Haris Ahmed</h1>\r\n            <div className=\"container\">\r\n                <div className=\"weather-side\">\r\n                    <div className=\"weather-gradient\"></div>\r\n                    <div className=\"date-container\">\r\n                        <h2 className=\"date-dayname\">{userData.name}</h2><span className=\"date-day\">22 Sep 2021</span><i className=\"location-icon\" data-feather=\"map-pin\"></i><span className=\"location\">{userData.sys.country}</span>\r\n                    </div>\r\n                    <div className=\"weather-container\"><i className=\"weather-icon\" data-feather=\"sun\"></i>\r\n                        <h1 className=\"weather-temp\">{userData.main.temp}째</h1>\r\n                        <h3 className=\"weather-desc\">{userData.weather[0].description}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"info-side\">\r\n                    <div className=\"today-info-container\">\r\n                        <div className=\"today-info\">\r\n                            <div className=\"precipitation\">\r\n                                <span className=\"title\">FEELS LIKE</span>\r\n                                <span className=\"value\">{userData.main.feels_like}째</span>\r\n                                <div className=\"clear\"></div>\r\n                            </div>\r\n                            <div className=\"humidity\">\r\n                                <span className=\"title\">HUMIDITY</span>\r\n                                <span className=\"value\">{userData.main.humidity}%</span>\r\n                                <div className=\"clear\"></div>\r\n                            </div>\r\n                            <div className=\"wind\">\r\n                                <span className=\"title\">WIND</span>\r\n                                <span className=\"value\">{userData.wind.speed}m/s</span>\r\n                                <div className=\"clear\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"week-container\">\r\n                        <ul className=\"week-list\">\r\n                            <li className=\"active\"><i className=\"day-icon\" data-feather=\"sun\"></i>\r\n                                <span className=\"day-name\">Min Temp</span>\r\n                                <span className=\"day-temp\">{userData.main.temp_min}째</span>\r\n                            </li>\r\n                            <li><i className=\"day-icon\" data-feather=\"cloud\"></i>\r\n                                <span className=\"day-name\">Max Temp</span>\r\n                                <span className=\"day-temp\">{userData.main.temp_max}째</span>\r\n                            </li>\r\n                            <div className=\"clear\"></div>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"location-container\"><div className=\"location-button\"> <i data-feather=\"map-pin\"></i>\r\n                        <div class=\"input-group mb-1\" style={{\r\n                            width: '100%', outline: 'none', position: 'relative', display: 'flex',\r\n                            flexWrap: 'inherit',\r\n                            alignItems: 'stretch'\r\n                        }}>\r\n                            <input type=\"text\" name='' id='user' class=\"form-control\" placeholder='Search City' style={{\r\n                                borderRadius: '100px', width: '100%',\r\n                                height: '35px',\r\n                                border: 'solid',\r\n                                background: 'transparent',\r\n                                color: 'black',\r\n                                fontWeight: 'bold',\r\n                                outline: 'none'\r\n                            }} />\r\n                            <button style={{marginLeft: '5px', borderRadius: '15px', width: '125px'}} onClick={userEvent}>Get Data</button>\r\n                    </div>\r\n                    {/* <span style={{ outline: 'none' }}>\r\n                            <input type=\"search\" placeholder='Search Any City' onChange={userEvent} style={{\r\n                                borderRadius: '100px', width: '100%',\r\n                                height: '23px',\r\n                                border: 'none',\r\n                                background: 'transparent',\r\n                                color: 'black',\r\n                                fontWeight: 'bold',\r\n                                outline: 'none'\r\n                            }} />\r\n                        </span> */}\r\n                </div></div>\r\n        </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n","import WeatherAppBody from './Components/WABody/WeatherAppBody';\n\nfunction App() {\n  return (\n    <>\n    <WeatherAppBody />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}